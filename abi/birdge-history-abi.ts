export const BRIDGE_HISTORY_ABI = [
  // Read functions
  {
    name: "getUserBridgeCount",
    type: "function",
    stateMutability: "view",
    inputs: [{ name: "user", type: "address" }],
    outputs: [{ name: "", type: "uint256" }],
  },
  {
    name: "bridgeExists",
    type: "function",
    stateMutability: "view",
    inputs: [{ name: "messageHash", type: "bytes32" }],
    outputs: [{ name: "", type: "bool" }],
  },
  {
    name: "NAME",
    type: "function",
    stateMutability: "view",
    inputs: [],
    outputs: [{ name: "", type: "string" }],
  },
  {
    name: "VERSION",
    type: "function",
    stateMutability: "view",
    inputs: [],
    outputs: [{ name: "", type: "string" }],
  },
  // Write functions
  {
    name: "recordBridge",
    type: "function",
    stateMutability: "nonpayable",
    inputs: [
      { name: "messageHash", type: "bytes32" },
      { name: "amount", type: "uint256" },
      { name: "token", type: "address" },
      { name: "fromChain", type: "uint32" },
      { name: "toChain", type: "uint32" },
      { name: "recipient", type: "address" },
      { name: "nonce", type: "uint64" },
      { name: "txHash", type: "string" },
    ],
    outputs: [],
  },
  {
    name: "updateBridgeStatus",
    type: "function",
    stateMutability: "nonpayable",
    inputs: [
      { name: "messageHash", type: "bytes32" },
      { name: "newStatus", type: "uint8" },
    ],
    outputs: [],
  },
  // Events
  {
    name: "BridgeRecorded",
    type: "event",
    inputs: [
      { name: "user", type: "address", indexed: true },
      { name: "messageHash", type: "bytes32", indexed: true },
      { name: "amount", type: "uint256", indexed: false },
      { name: "fromChain", type: "uint32", indexed: false },
      { name: "toChain", type: "uint32", indexed: false },
      { name: "recipient", type: "address", indexed: false },
    ],
  },
  {
    name: "getUserBridges",
    type: "function",
    stateMutability: "view",
    inputs: [{ name: "user", type: "address" }],
    outputs: [
      {
        components: [
          { name: "messageHash", type: "bytes32" },
          { name: "amount", type: "uint256" },
          { name: "token", type: "address" },
          { name: "fromChain", type: "uint32" },
          { name: "toChain", type: "uint32" },
          { name: "recipient", type: "address" },
          { name: "timestamp", type: "uint256" },
          { name: "nonce", type: "uint64" },
          { name: "status", type: "uint8" },
          { name: "txHash", type: "string" },
        ],
        name: "",
        type: "tuple[]",
      },
    ],
  },
  {
    name: "getUserStats",
    type: "function",
    stateMutability: "view",
    inputs: [{ name: "user", type: "address" }],
    outputs: [
      { name: "totalBridges", type: "uint256" },
      { name: "completedBridges", type: "uint256" },
      { name: "pendingBridges", type: "uint256" },
      { name: "totalVolume", type: "uint256" },
      { name: "fromSepoliaVolume", type: "uint256" },
      { name: "toSepoliaVolume", type: "uint256" },
    ],
  },
  // ========== NEW GLOBAL ANALYTICS FUNCTIONS ==========
  {
    name: "getBridgeAnalytics",
    type: "function",
    stateMutability: "view",
    inputs: [],
    outputs: [
      { name: "totalAmount", type: "uint256" },
      { name: "totalTxns", type: "uint256" },
      {
        components: [
          { name: "user", type: "address" },
          { name: "messageHash", type: "bytes32" },
          { name: "amount", type: "uint256" },
          { name: "token", type: "address" },
          { name: "fromChain", type: "uint32" },
          { name: "toChain", type: "uint32" },
          { name: "recipient", type: "address" },
          { name: "timestamp", type: "uint256" },
          { name: "nonce", type: "uint64" },
          { name: "status", type: "uint8" },
          { name: "txHash", type: "string" },
        ],
        name: "txns",
        type: "tuple[]",
      },
    ],
  },
  {
    name: "getGlobalAnalyticsSummary",
    type: "function",
    stateMutability: "view",
    inputs: [],
    outputs: [
      { name: "totalAmount", type: "uint256" },
      { name: "totalTxns", type: "uint256" },
      { name: "totalUsers", type: "uint256" },
    ],
  },
  {
    name: "getPaginatedBridgeAnalytics",
    type: "function",
    stateMutability: "view",
    inputs: [
      { name: "offset", type: "uint256" },
      { name: "limit", type: "uint256" },
    ],
    outputs: [
      { name: "totalAmount", type: "uint256" },
      { name: "totalTxns", type: "uint256" },
      {
        components: [
          { name: "user", type: "address" },
          { name: "messageHash", type: "bytes32" },
          { name: "amount", type: "uint256" },
          { name: "token", type: "address" },
          { name: "fromChain", type: "uint32" },
          { name: "toChain", type: "uint32" },
          { name: "recipient", type: "address" },
          { name: "timestamp", type: "uint256" },
          { name: "nonce", type: "uint64" },
          { name: "status", type: "uint8" },
          { name: "txHash", type: "string" },
        ],
        name: "txns",
        type: "tuple[]",
      },
      { name: "hasMore", type: "bool" },
    ],
  },
  {
    name: "getAllUsers",
    type: "function",
    stateMutability: "view",
    inputs: [],
    outputs: [{ name: "", type: "address[]" }],
  },
  {
    name: "getTotalUsers",
    type: "function",
    stateMutability: "view",
    inputs: [],
    outputs: [{ name: "", type: "uint256" }],
  },
  // Additional existing functions
  {
    name: "getUserBridgeByIndex",
    type: "function",
    stateMutability: "view",
    inputs: [
      { name: "user", type: "address" },
      { name: "index", type: "uint256" },
    ],
    outputs: [
      {
        components: [
          { name: "messageHash", type: "bytes32" },
          { name: "amount", type: "uint256" },
          { name: "token", type: "address" },
          { name: "fromChain", type: "uint32" },
          { name: "toChain", type: "uint32" },
          { name: "recipient", type: "address" },
          { name: "timestamp", type: "uint256" },
          { name: "nonce", type: "uint64" },
          { name: "status", type: "uint8" },
          { name: "txHash", type: "string" },
        ],
        name: "",
        type: "tuple",
      },
    ],
  },
  {
    name: "getBridgeByMessageHash",
    type: "function",
    stateMutability: "view",
    inputs: [{ name: "messageHash", type: "bytes32" }],
    outputs: [
      {
        components: [
          { name: "messageHash", type: "bytes32" },
          { name: "amount", type: "uint256" },
          { name: "token", type: "address" },
          { name: "fromChain", type: "uint32" },
          { name: "toChain", type: "uint32" },
          { name: "recipient", type: "address" },
          { name: "timestamp", type: "uint256" },
          { name: "nonce", type: "uint64" },
          { name: "status", type: "uint8" },
          { name: "txHash", type: "string" },
        ],
        name: "",
        type: "tuple",
      },
    ],
  },
  {
    name: "getSupportedToken",
    type: "function",
    stateMutability: "view",
    inputs: [{ name: "chainId", type: "uint32" }],
    outputs: [{ name: "", type: "address" }],
  },
  {
    name: "updateSupportedToken",
    type: "function",
    stateMutability: "nonpayable",
    inputs: [
      { name: "chainId", type: "uint32" },
      { name: "tokenAddress", type: "address" },
    ],
    outputs: [],
  },
] as const;
